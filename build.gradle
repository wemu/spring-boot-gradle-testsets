buildscript {
	ext {
		kotlinVersion = '1.1.2-2'
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath('org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.3.2')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.unbroken-dome.test-sets'

testSets {
	integrationTest
}


version = System.getenv("BUILD_NUMBER") ?: '9.0.0-SNAPSHOT'

sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile('org.slf4j:slf4j-api:1.7.16')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin:2.8.7')

	runtime('org.springframework.boot:spring-boot-devtools')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.natpryce:hamkrest:1.4.0.0')
	testCompile('org.mockito:mockito-core:2.8.9')
	testCompile('com.nhaarman:mockito-kotlin:1.5.0')
	testCompile('org.hamcrest:hamcrest-core:1.3')

	integrationTestCompile(sourceSets.test.output)
	integrationTestRuntime(sourceSets.test.output)
}

processResources {
	filesMatching('application-*.properties') {
		expand(project.properties)
	}
}

integrationTest {
	dependsOn test
}
